@use '~element-plus/theme-chalk/src/mixins/mixins' as *;
@use '~element-plus/theme-chalk/src/mixins/var' as *;
@use '~element-plus/theme-chalk/src/common/var' as *;
@use './var' as *;

// Name:            Navbar
// Description:     Component to create horizontal navigation bars
//
// Component:       `el-navbar`
//
// Sub-objects:     `el-navbar-container`
//                  `el-navbar-left`
//                  `el-navbar-right`
//                  `el-navbar-center`
//                  `el-navbar-center-left`
//                  `el-navbar-center-right`
//                  `el-navbar-nav`
//                  `el-navbar-item`
//                  `el-navbar-toggle`
//                  `el-navbar-subtitle`
//                  `el-navbar-dropbar`
//
// Modifiers:       `el-navbar-primary`
//                  `el-navbar-transparent`
//                  `el-navbar-sticky`
//                  `el-navbar-dropdown-stack`
//
// States:          `el-active`
//                  `el-parent`
//                  `el-open`
//
// ========================================================================

/*
 * 1. Create position context to center navbar group
 */

@include b(navbar) {
  @include set-component-css-var('navbar', $navbar);

  display: flex;
  /* 1 */
  position: relative;

  @if (mixin-exists(hook-navbar)) {
    @include hook-navbar();
  }
}

/* Container
 ========================================================================== */

.el-navbar-container:not(.el-navbar-transparent) {
  background: var(--el-navbar-background);
  @if (mixin-exists(hook-navbar-container)) {
    @include hook-navbar-container();
  }
}

/*
 * Remove pseudo elements created by micro clearfix as precaution (if Container component is used)
 */

.el-navbar-container > ::before,
.el-navbar-container > ::after {
  display: none !important;
}

/* Groups
 ========================================================================== */

/*
 * 1. Align navs and items vertically if they have a different height
 * 2. Note: IE 11 requires an extra `div` which affects the center selector
 */

.el-navbar-left,
.el-navbar-right,
// 2. [class*='el-navbar-center'],
.el-navbar-center,
.el-navbar-center-left > *,
.el-navbar-center-right > * {
  display: flex;
  /* 1 */
  align-items: center;
}

/*
 * Horizontal alignment
 * 1. Create position context for centered navbar with sub groups (left/right)
 * 2. Fix text wrapping if content is larger than 50% of the container.
 * 3. Needed for dropdowns because a new position context is created
 *    `z-index` must be smaller than off-canvas
 * 4. Align sub groups for centered navbar
 */

.el-navbar-right {
  margin-left: auto;
}

.el-navbar-center:only-child {
  margin-left: auto;
  margin-right: auto;
  /* 1 */
  position: relative;
}

.el-navbar-center:not(:only-child) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* 2 */
  width: max-content;
  box-sizing: border-box;
  /* 3 */
  z-index: 999;
}

/* 4 */
.el-navbar-center-left,
.el-navbar-center-right {
  position: absolute;
  top: 0;
}

.el-navbar-center-left {
  right: 100%;
}
.el-navbar-center-right {
  left: 100%;
}

[class*='el-navbar-center-'] {
  width: max-content;
  box-sizing: border-box;
}

/* Nav
 ========================================================================== */

/*
 * 1. Reset list
 */

.el-navbar-nav {
  display: flex;
  /* 1 */
  margin: 0;
  padding: 0;
  list-style: none;
}

/*
 * Allow items to wrap into the next line
 * Only not `absolute` positioned groups
 */

.el-navbar-left,
.el-navbar-right,
.el-navbar-center:only-child {
  flex-wrap: wrap;
}

/*
 * Items
 * 1. Center content vertically and horizontally
 * 2. Imitate white space gap when using flexbox
 * 3. Dimensions
 * 4. Style
 * 5. Required for `a`
 */

.el-navbar-nav > li > a,    // Nav item
.el-navbar-item,            // Content item
.el-navbar-toggle {
  // Clickable item
  /* 1 */
  display: flex;
  justify-content: center;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  box-sizing: border-box;
  min-height: var(--el-navbar-item-height);
  padding: 0 var(--el-navbar-item-padding-horizontal);
  /* 4 */
  // font-size: $navbar-nav-item-font-size;
  // font-family: $navbar-nav-item-font-family;
  /* 5 */
  text-decoration: none;
}

/*
 * Nav items
 */

.el-navbar-nav > li > a {
  color: var(--el-navbar-item-color);
  @if (mixin-exists(hook-navbar-nav-item)) {
    @include hook-navbar-nav-item();
  }
}

/*
 * Hover
 * Apply hover style also if dropdown is opened
 */

.el-navbar-nav > li:hover > a,
.el-navbar-nav > li > a[aria-expanded='true'] {
  color: var(--el-navbar-item-hover-color);
  @if (mixin-exists(hook-navbar-nav-item-hover)) {
    @include hook-navbar-nav-item-hover();
  }
}

/* OnClick */
.el-navbar-nav > li > a:active {
  color: var(--el-navbar-item-onclick-color);
  @if (mixin-exists(hook-navbar-nav-item-onclick)) {
    @include hook-navbar-nav-item-onclick();
  }
}

/* Active */
.el-navbar-nav > li.el-active > a {
  color: var(--el-navbar-item-active-color);
  @if (mixin-exists(hook-navbar-nav-item-active)) {
    @include hook-navbar-nav-item-active();
  }
}

/* Item
 ========================================================================== */

.el-navbar-item {
  color: var(--el-navbar-color);
  @if (mixin-exists(hook-navbar-item)) {
    @include hook-navbar-item();
  }
}

/*
 * Remove margin from the last-child
 */

.el-navbar-item > :last-child {
  margin-bottom: 0;
}

/* Toggle
 ========================================================================== */

.el-navbar-toggle {
  color: var(--el-navbar-toggle-color);
  @if (mixin-exists(hook-navbar-toggle)) {
    @include hook-navbar-toggle();
  }
}

.el-navbar-toggle:hover,
.el-navbar-toggle[aria-expanded='true'] {
  color: var(--el-navbar-toggle-hover-color);
  text-decoration: none;
  @if (mixin-exists(hook-navbar-toggle-hover)) {
    @include hook-navbar-toggle-hover();
  }
}

/*
 * Icon
 * Adopts `el-icon`
 */

.el-navbar-toggle-icon {
  @if (mixin-exists(hook-navbar-toggle-icon)) {
    @include hook-navbar-toggle-icon();
  }
}

/* Hover */
:hover > .el-navbar-toggle-icon {
  @if (mixin-exists(hook-navbar-toggle-icon-hover)) {
    @include hook-navbar-toggle-icon-hover();
  }
}

/* Subtitle
 ========================================================================== */

// .el-navbar-subtitle {
//     font-size: $navbar-subtitle-font-size;
//     @if(mixin-exists(hook-navbar-subtitle)) {@include hook-navbar-subtitle();}
// }

/* Style modifiers
 ========================================================================== */

.el-navbar-primary {
  @if (mixin-exists(hook-navbar-primary)) {
    @include hook-navbar-primary();
  }
}

.el-navbar-transparent {
  @if (mixin-exists(hook-navbar-transparent)) {
    @include hook-navbar-transparent();
  }
}

.el-navbar-sticky {
  @if (mixin-exists(hook-navbar-sticky)) {
    @include hook-navbar-sticky();
  }
}

// Hooks
// ========================================================================

@if (mixin-exists(hook-navbar-misc)) {
  @include hook-navbar-misc();
}
